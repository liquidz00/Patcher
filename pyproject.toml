[project]
name = "patcherctl"
dynamic = ["readme", "version"]
description = "Fetch patch management data from Jamf Pro to generate comprehensive reports in both Excel and PDF formats"
keywords = ["jamf", "pro", "jss", "patch", "macOS"]
license = { file = "LICENSE.txt" }
authors = [
  { name = "Andrew Speciale" },
  { name = "Chris Ball" }
]
requires-python = ">=3.10"
dependencies = [
  "aiohttp>=3.9.5",
  "asyncclick>=8.1.7.2",
  "asyncio>=3.4.3",
  "click>=8.1.7",
  "fpdf2>=2.7.8",
  "keyring>=25.2.1",
  "openpyxl>=3.1.2",
  "pandas>=2.2.0",
  "pyarrow>=15.0.0",
  "pydantic>=2.7.4",
  "requests>=2.32.2",
]

classifiers = [
  "Development Status :: 3 - Alpha",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Intended Audience :: System Administrators",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Developers",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Documentation",
  "License :: OSI Approved :: Apache Software License"
]


[project.urls]
Documentation = "https://github.com/liquidz00/Patcher/wiki"
Source = "https://github.com/liquidz00/Patcher"

[project.scripts]
patcherctl = "Patcher.cli:main"

[project.optional-dependencies]
dev = [
  "black>=24.3.0",
  "mypy-extensions>=1.0.0",
  "packaging>=23.2",
  "pathspec>=0.12.1",
  "platformdirs>=4.2.0",
  "pluggy>=1.5.0",
  "pytest>=8.2.2",
  "pytest-asyncio>=0.23.5",
  "pytest-cov>=4.0.0",
  "tomli>=2.0.1",
]

[build-system]
requires = [
  "setuptools >= 61",
  "wheel"
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = { attr = "Patcher.__about__.__version__" }
readme = { file = ["README.md"], content-type = "text/markdown" }

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
  "--durations=5",
  "--color=yes",
  "--cov=src",
  "--cov-report=html:coverage/htmlcov",
]
testpaths = ["./tests"]
filterwarnings = [
  "ignore::DeprecationWarning",
  "ignore::RuntimeWarning",
]


