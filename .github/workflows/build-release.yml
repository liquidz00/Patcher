name: Build and Release

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install pyinstaller

      - name: Prepare environment
        run: |
          echo "${{ secrets.CERT_NAME }}" | base64 --decode > cert.p12
          echo "${{ secrets.INSTALLER_CERT_NAME }}" | base64 --decode > installer_cert.p12
          echo "${{ secrets.APPLE_ID }}" | base64 --decode > apple_id.txt
          echo "${{ secrets.TEAM_ID }}" | base64 --decode > team_id.txt
          echo "${{ secrets.APP_SPECIFIC_PASSWORD }}" | base64 --decode > app_specific_password.txt
          echo "${{ secrets.P12_PASSWORD_SECRET }}" | base64 --decode > p12_password.txt
        shell: bash

      - name: Read version from file
        id: read_version
        run: |
          VERSION=$(python3 -c 'import bin.__version__; print(bin.__version__.__version__)')
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Run build script
        run: |
          ./build.sh "$(cat apple_id.txt)" "$(cat team_id.txt)" "$(cat app_specific_password.txt)" "cert.p12" "installer_cert.p12" "$(cat p12_password.txt)"
        shell: bash

      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v4.3.1
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}
          reverse: 'true'

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2.0.4
        with:
          name: Patcher ${{ env.VERSION }}
          tag_name: v${{ env.VERSION }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            This release has been automatically generated by a GitHub Action.

            ## Installation Instructions
            For detailed installation instructions, please refer to the [Wiki](https://github.com/liquidz00/Patcher/wiki#installation) or the [README](https://github.com/liquidz00/Patcher/blob/main/README.md)

            ## Release notes
            ${{ steps.changelog.outputs.changelog }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/Patcher.pkg
          asset_name: Patcher.pkg
          asset_content_type: application/octet-stream
